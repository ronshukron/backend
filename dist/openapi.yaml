openapi: 3.0.0
info:
  title: Recipes api
  description: API for recipes project
  version: 1.0.1
servers:
# local:
- url: "http://127.0.0.1:3000"
# remote:
# - url: "http://132.72.65.211"
  description: SwaggerHub API Auto Mocking hey
tags:
- name: Auth
  description: All authentication related routes
- name: Users
  description: All the user's personal app info
- name: Recipes
  description: All reciepes general info
paths:
  /register:
    post:
      tags:
      - Auth
      summary: A new user from the client is added to the server
      description: A JSON object contains all the details about the new user.
      requestBody:
        description: Inventory item to add
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "201":
          description: A new user has been added
        "400":
          description: wrong input parameters
  /login:
    post:
      tags:
      - Auth
      summary: Login an exist user
      description: An exist user login to the system
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginScheme'
        required: true
      responses:
        "200":
          description: |
            User was found in the DB and authenitcated successfully. The session ID is returned in a cookie named `session`.  You should include this cookie in subsequent requests
          headers:
            Set-Cookie:
              style: simple
              explode: false
              schema:
                type: string
                example: session=87s97sdhgf279293f8w0e9
        "401":
          description: Authentication failed
  /logout:
    post:
      tags:
        - Auth
      summary: logout a user from the system and delete his cookie
      responses:
        "200":
          description: "the user has ben successfully logged out"
  /users/favorites:
    get:
      tags:
      - Users
      summary: Return the favorite recipes that were saved by user
      description: Get an array of recipes that were saved by a specific user
      responses:
        "200":
          description: data about the user's favorites recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
    post:
      tags:
      - Users
      summary: save recipe in the favorites list of a user
      description: save recipe in the favorites list of a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reciepeId:
                  type: string
                  description: reciepe's id which the user saved
                  example: 716429
      responses:
        "200":
          description: The Recipe successfully saved as favorite
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []


  /user/familyrecepies:
    get:
      tags:
      - Users
      summary: Return the family recipes that were saved by user
      description: Get an array of family recipes that were saved by a specific user
      responses:
        "200":
          description: data about the user's family recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
    post:
      tags:
      - Users
      summary: save recipe in the family recipes list of a user
      description: save recipe in the family recipes list of a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: int
                  description: the user id
                  example: 1
                username:
                  type: string
                  description: the user id username
                  example: 'NoaBBB'
                recipe_id:
                  type: int
                  description: the recipe id
                  example: 9999983
                title:
                  type: string
                  description: the recipe title
                  example: "cake"
                image:
                  type: string
                  description: the recipe image
                  example: "image.jpg"
                how_to_make:
                  type: JSON
                  description: how can i make the recipe with the name unit and amount 
                  example: "{ name: 'John Doe', unit: 'ounce', amount: 25 }"
                time_to_make:
                  type: string
                  description: how much time it takes to make this reciepe
                  example: "30 min"
                likes:
                  type: int
                  description: how many users liket this 
                  example: 4
                is_vegan:                   
                  type: string
                  description: is this recipe is vegan or not of yes it vegan
                  example: "yes"
                is_gluten_free:                  
                  type: string
                  description: is this recipe is gluten free or not of yes it gluten free
                  example: "yes"    
                servings:                  
                  type: int
                  description: how many units we can make from this recipe
                  example: 5              
      responses:
        "200":
          description: The Recipe successfully saved as family recipes
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []



  /user/myrecipes:
    get:
      tags:
      - Users
      summary: Return the my recipes that were saved by user
      description: Get an array of my recipes that were saved by a specific user
      responses:
        "200":
          description: data about the user's recipes that he saved as my recipes returned
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/RecipePreview'
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []
    post:
      tags:
      - Users
      summary: save recipe in the my recipes list of a user
      description: save recipe in the my recipes list of a user
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user_id:
                  type: int
                  description: the user id
                  example: 1
                username:
                  type: string
                  description: the user id username
                  example: 'NoaBBB'
                recipe_id:
                  type: int
                  description: the recipe id
                  example: 9999983
                title:
                  type: string
                  description: the recipe title
                  example: "cake"
                image:
                  type: string
                  description: the recipe image
                  example: "image.jpg"
                how_to_make:
                  type: JSON
                  description: how can i make the recipe with the name unit and amount 
                  example: "{ name: 'John Doe', unit: 'ounce', amount: 25 }"
                time_to_make:
                  type: string
                  description: how much time it takes to make this reciepe
                  example: "30 min"
                likes:
                  type: int
                  description: how many users liket this 
                  example: 4
                is_vegan:                   
                  type: string
                  description: is this recipe is vegan or not of yes it vegan
                  example: "yes"
                is_gluten_free:                  
                  type: string
                  description: is this recipe is gluten free or not of yes it gluten free
                  example: "yes"    
                servings:                  
                  type: int
                  description: how many units we can make from this recipe
                  example: 5          
      responses:
        "200":
          description: The Recipe successfully saved as my recipes
        "401":
          description: user is not authorized
      security:
      - cookieAuth: []

  /user/lastwatch:
      get:
        tags:
        - Users
        summary: Return the 3 last recipes that were wached by user
        description: Get an array of my 3 last recipes that wached by a specific user
        responses:
          "200":
            description: data about the user's  3 last wached recipes returned
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/RecipePreview'
          "401":
            description: user is not authorized
        security:
        - cookieAuth: []
      post:
        tags:
        - Users
        summary: save recipe in the view recipes list of a user
        description: save recipe in the view recipes list of a user
        requestBody:
          content:
            application/json:
              schema:
                type: object
                properties:
                  recipe_id:
                    type: int
                    description: the recipe id
                    example: 9999983     
        responses:
          "200":
            description: The Recipe successfully saved as watced recipes
          "401":
            description: user is not authorized
        security:
        - cookieAuth: []


  /user/allobserved:
      get:
        tags:
        - Users
        summary: Return the recipes that were wached by user
        description: Get an array of my recipes that wached by a specific user
        responses:
          "200":
            description: data about the user's wached recipes returned
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: '#/components/schemas/RecipePreview'
          "401":
            description: user is not authorized
        security:
        - cookieAuth: []


  /recipes/{recipeId}:
    get:
      tags:
      - Recipes
      summary: Return preview details on recipe by his ID
      description: Return preview details on recipe by his ID
      parameters:
      - name: recipeId
        in: path
        description: recipe's id
        required: true
        style: simple
        explode: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the recipe
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePreview'
        "404":
          description: recipeId is not exists



  /recipes/randomrecipes:
    get:
      tags:
      - Recipes
      summary: Return 3 random recipes 
      description: Return list of 3 random recipes
      responses:
        "200":
          description: data about the recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePreview'
        "404":
          description: there is no recipes

  /recipes/search:
    get:
      tags:
      - Recipes
      summary: Return 3 random recipes 
      description: Return list of 3 random recipes
      parameters:
      - name: query
        in: query
        description: The (natural language) recipe search query
        required: false
        schema:
          type: string
      - name: cuisine
        in: query
        description: The cuisine(s) of the recipes
        required: false
        schema:
          type: string
      - name: diet
        in: query
        description: The diet(s) for which the recipes must be suitable
        required: false
        schema:
          type: string
      - name: intolerances
        in: query
        description: A comma-separated list of intolerances
        required: false
        schema:
          type: string
      - name: number
        in: query
        description: Number of recipes to return
        required: false
        schema:
          type: integer
      responses:
        "200":
          description: data about the recipes
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecipePreview'
        "404":
          description: there is no recipes

components:
  schemas:
    User:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins between 3 to 8 letters only
          example: my_name
        firstname:
          type: string
          description: user's first name
          example: my_first_name
        lastname:
          type: string
          description: user's last name
          example: my_last_name
        country:
          type: string
          description: user's country
          example: Israel
        password:
          maxLength: 10
          minLength: 5
          type: string
          description: password conatins between 5 to 10 chars, at least one of them
            is a number and a special char
          format: password
          example: my_name@12
        email:
          pattern: email
          type: string
          description: user's email
          example: my_name12@gmail.com
        # image-url:
        #   pattern: URL
        #   type: string
        #   description: URL for the user's image
        #   example: https://cloudinary.com/
      description: Model containing user info
    LoginScheme:
      type: object
      properties:
        username:
          maxLength: 8
          minLength: 3
          type: string
          description: username conatins letters only
        password:
          maxLength: 10
          minLength: 5
          description: password conatins at least one number and one special char
          format: password
      example:
        username: my_name
        password: my_name@12
    RecipePreview:
      type: object
      properties:
        id:
          type: integer
          description: recipe identifier
          example: 102
        title:
          type: string
          description: recipe name
          example: Simple Macaroni and Cheese
        image:
          type: string
          description: recipe image
          format: URL
          example: https://spoonacular.com/recipeimages/655455-566x370.jpg
        readyInMinutes:
          type: integer
          description: the time takes to make this recipe
          example: 45
        popularity:
          type: integer
          description: how many likes got this recipe
          example: 5987
        vegetarian:
          type: boolean
          description: indication if the recipe is vegetarian
          example: false
        vegan:
          type: boolean
          description: indication if the recipe is vegan
          example: false
        glutenFree:
          type: boolean
          description: indication if the recipe is gluten free
          example: false
  
